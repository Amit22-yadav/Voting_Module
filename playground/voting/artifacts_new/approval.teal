#pragma version 8
intcblock 0 1 65536 22
bytecblock 0x 0x151f7c75 0x5f 0x23 0x24 0x4e6f5f636f756e74 0x7965735f636f756e74 0x40
txn NumAppArgs
intc_0 // 0
==
bnz main_l28
txna ApplicationArgs 0
pushbytes 0x7b6b0a51 // "Register_proposal(string,string,uint64,string,uint64)(string,string,uint64,string,uint64)"
==
bnz main_l27
txna ApplicationArgs 0
pushbytes 0xd79fdd1a // "asset_register(string,string)(string,string)"
==
bnz main_l26
txna ApplicationArgs 0
pushbytes 0x7e1fba41 // "Registred_user_per_proposal(string,string)(string,string)"
==
bnz main_l25
txna ApplicationArgs 0
pushbytes 0x82dab2b7 // "Register_user_asset(string,string,string,uint64)(string,string,uint64)"
==
bnz main_l24
txna ApplicationArgs 0
pushbytes 0xa7c844c0 // "update_proposal(string,string,uint64,string,uint64)(string,string,uint64,string,uint64)"
==
bnz main_l23
txna ApplicationArgs 0
pushbytes 0x7146b495 // "Update_Users(string,string,string,uint64)(string,string,uint64)"
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x7ea38849 // "Voting_Record(string,string,string,uint64,bool)(string,string,uint64,bool)"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0xddabd16f // "Result(string)string"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0x9093bcf0 // "read_proposal_store(string)(string,string,uint64,string,uint64)"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0xb948dd04 // "read_asset_id(string)(string,string)"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0xfaa055d4 // "read_user_proposal_store(string,string)(string,string)"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x4e9fa00f // "read_user_asset_store(string,string,string)(string,string,uint64)"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x7f5fa540 // "read_user_response(string)(string,string,uint64,bool)"
==
bnz main_l15
err
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readuserresponsecaster_26
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readuserassetstorecaster_25
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readuserproposalstorecaster_24
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readassetidcaster_23
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub readproposalstorecaster_22
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub Resultcaster_21
intc_1 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub VotingRecordcaster_20
intc_1 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub UpdateUserscaster_19
intc_1 // 1
return
main_l23:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub updateproposalcaster_18
intc_1 // 1
return
main_l24:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub Registeruserassetcaster_17
intc_1 // 1
return
main_l25:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub Registreduserperproposalcaster_16
intc_1 // 1
return
main_l26:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub assetregistercaster_15
intc_1 // 1
return
main_l27:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub Registerproposalcaster_14
intc_1 // 1
return
main_l28:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l30
err
main_l30:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec 5 // "No_count"
intc_0 // 0
app_global_put
bytec 6 // "yes_count"
intc_0 // 0
app_global_put
retsub

// Register_proposal
Registerproposal_1:
proto 5 1
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -5
frame_bury 5
frame_dig 5
frame_bury 4
intc_3 // 22
frame_bury 2
frame_dig 2
frame_dig 5
len
+
frame_bury 3
frame_dig 3
intc_2 // 65536
<
assert
frame_dig 2
itob
extract 6 0
frame_dig -4
frame_bury 5
frame_dig 4
frame_dig 5
concat
frame_bury 4
frame_dig 3
frame_bury 2
frame_dig 2
frame_dig 5
len
+
frame_bury 3
frame_dig 3
intc_2 // 65536
<
assert
frame_dig 2
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig -2
frame_bury 5
frame_dig 4
frame_dig 5
concat
frame_bury 4
frame_dig 3
frame_bury 2
frame_dig 2
itob
extract 6 0
concat
frame_dig -1
itob
concat
frame_dig 4
concat
frame_bury 1
frame_dig -5
extract 2 0
box_len
store 1
store 0
load 1
intc_0 // 0
==
// Proposal_ID already exists
assert
frame_dig -5
extract 2 0
box_del
pop
frame_dig -5
extract 2 0
frame_dig 1
box_put
frame_dig -5
extract 2 0
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 0
retsub

// asset_register
assetregister_2:
proto 2 1
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -2
extract 2 0
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 1
frame_dig -2
frame_bury 6
frame_dig 6
frame_bury 5
pushint 4 // 4
frame_bury 3
frame_dig 3
frame_dig 6
len
+
frame_bury 4
frame_dig 4
intc_2 // 65536
<
assert
frame_dig 3
itob
extract 6 0
frame_dig -1
frame_bury 6
frame_dig 5
frame_dig 6
concat
frame_bury 5
frame_dig 4
frame_bury 3
frame_dig 3
itob
extract 6 0
concat
frame_dig 5
concat
frame_bury 2
bytec 4 // "$"
frame_dig -1
extract 2 0
concat
box_len
store 7
store 6
load 7
intc_0 // 0
==
// Proposal_ID already exists
assert
bytec 4 // "$"
frame_dig -1
extract 2 0
concat
box_del
pop
bytec 4 // "$"
frame_dig -1
extract 2 0
concat
frame_dig 2
box_put
bytec 4 // "$"
frame_dig -1
extract 2 0
concat
box_get
store 9
store 8
load 9
assert
load 8
frame_bury 0
retsub

// Registred_user_per_proposal
Registreduserperproposal_3:
proto 2 1
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -2
frame_bury 6
frame_dig 6
frame_bury 5
pushint 4 // 4
frame_bury 3
frame_dig 3
frame_dig 6
len
+
frame_bury 4
frame_dig 4
intc_2 // 65536
<
assert
frame_dig 3
itob
extract 6 0
frame_dig -1
frame_bury 6
frame_dig 5
frame_dig 6
concat
frame_bury 5
frame_dig 4
frame_bury 3
frame_dig 3
itob
extract 6 0
concat
frame_dig 5
concat
frame_bury 1
frame_dig -2
extract 2 0
box_get
store 11
store 10
load 11
assert
load 10
frame_bury 2
bytec_2 // "_"
frame_dig -1
extract 2 0
concat
box_len
store 13
store 12
load 13
intc_0 // 0
==
// User_ID already exists
assert
bytec_2 // "_"
frame_dig -1
extract 2 0
concat
box_del
pop
bytec_2 // "_"
frame_dig -1
extract 2 0
concat
frame_dig 1
box_put
bytec_2 // "_"
frame_dig -1
extract 2 0
concat
box_get
store 15
store 14
load 15
assert
load 14
frame_bury 0
retsub

// Register_user_asset
Registeruserasset_4:
proto 4 1
bytec_0 // ""
dupn 4
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -4
extract 2 0
box_get
store 17
store 16
load 17
assert
load 16
frame_bury 3
bytec_2 // "_"
frame_dig -3
extract 2 0
concat
box_get
store 19
store 18
load 19
assert
load 18
frame_bury 2
bytec 4 // "$"
frame_dig -2
extract 2 0
concat
box_get
store 21
store 20
load 21
assert
load 20
frame_bury 4
bytec_3 // "#"
frame_dig -2
extract 2 0
concat
box_len
store 23
store 22
load 23
intc_0 // 0
==
// asset_ID already exists
assert
frame_dig -3
frame_bury 8
frame_dig 8
frame_bury 7
pushint 12 // 12
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
frame_dig -2
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig -1
itob
concat
frame_dig 7
concat
frame_bury 1
bytec_3 // "#"
frame_dig -2
extract 2 0
concat
box_del
pop
bytec_3 // "#"
frame_dig -2
extract 2 0
concat
frame_dig 1
box_put
bytec_3 // "#"
frame_dig -2
extract 2 0
concat
box_get
store 25
store 24
load 25
assert
load 24
frame_bury 0
retsub

// update_proposal
updateproposal_5:
proto 5 1
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -5
extract 2 0
box_get
store 27
store 26
load 27
assert
load 26
frame_bury 1
frame_dig -5
frame_bury 6
frame_dig 6
frame_bury 5
intc_3 // 22
frame_bury 3
frame_dig 3
frame_dig 6
len
+
frame_bury 4
frame_dig 4
intc_2 // 65536
<
assert
frame_dig 3
itob
extract 6 0
frame_dig -4
frame_bury 6
frame_dig 5
frame_dig 6
concat
frame_bury 5
frame_dig 4
frame_bury 3
frame_dig 3
frame_dig 6
len
+
frame_bury 4
frame_dig 4
intc_2 // 65536
<
assert
frame_dig 3
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig -2
frame_bury 6
frame_dig 5
frame_dig 6
concat
frame_bury 5
frame_dig 4
frame_bury 3
frame_dig 3
itob
extract 6 0
concat
frame_dig -1
itob
concat
frame_dig 5
concat
frame_bury 2
frame_dig -5
extract 2 0
box_del
pop
frame_dig -5
extract 2 0
frame_dig 2
box_put
frame_dig -5
extract 2 0
box_get
store 29
store 28
load 29
assert
load 28
frame_bury 0
retsub

// Update_Users
UpdateUsers_6:
proto 4 1
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -4
extract 2 0
box_get
store 31
store 30
load 31
assert
load 30
frame_bury 3
bytec_2 // "_"
frame_dig -3
extract 2 0
concat
box_get
store 33
store 32
load 33
assert
load 32
frame_bury 1
frame_dig -3
frame_bury 7
frame_dig 7
frame_bury 6
pushint 12 // 12
frame_bury 4
frame_dig 4
frame_dig 7
len
+
frame_bury 5
frame_dig 5
intc_2 // 65536
<
assert
frame_dig 4
itob
extract 6 0
frame_dig -2
frame_bury 7
frame_dig 6
frame_dig 7
concat
frame_bury 6
frame_dig 5
frame_bury 4
frame_dig 4
itob
extract 6 0
concat
frame_dig -1
itob
concat
frame_dig 6
concat
frame_bury 2
bytec_3 // "#"
frame_dig -2
extract 2 0
concat
box_del
pop
bytec_3 // "#"
frame_dig -2
extract 2 0
concat
frame_dig 2
box_put
bytec_3 // "#"
frame_dig -2
extract 2 0
concat
box_get
store 35
store 34
load 35
assert
load 34
frame_bury 0
retsub

// Voting_Record
VotingRecord_7:
proto 5 1
bytec_0 // ""
dupn 4
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -5
extract 2 0
box_get
store 37
store 36
load 37
assert
load 36
frame_bury 1
bytec_2 // "_"
frame_dig -4
extract 2 0
concat
box_get
store 39
store 38
load 39
assert
load 38
frame_bury 2
bytec_3 // "#"
frame_dig -3
extract 2 0
concat
box_get
store 41
store 40
load 41
assert
load 40
frame_bury 3
frame_dig -4
frame_bury 8
frame_dig 8
frame_bury 7
pushint 13 // 13
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_2 // 65536
<
assert
frame_dig 5
itob
extract 6 0
frame_dig -3
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig -2
itob
concat
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig -1
setbit
concat
frame_dig 7
concat
frame_bury 4
bytec 7 // "@"
frame_dig -4
extract 2 0
concat
box_del
pop
bytec 7 // "@"
frame_dig -4
extract 2 0
concat
frame_dig 4
box_put
bytec 7 // "@"
frame_dig -4
extract 2 0
concat
box_get
store 43
store 42
load 43
assert
load 42
frame_bury 0
frame_dig -1
intc_1 // 1
==
bnz VotingRecord_7_l2
bytec 5 // "No_count"
bytec 5 // "No_count"
app_global_get
frame_dig -2
+
app_global_put
b VotingRecord_7_l3
VotingRecord_7_l2:
bytec 6 // "yes_count"
bytec 6 // "yes_count"
app_global_get
frame_dig -2
+
app_global_put
VotingRecord_7_l3:
retsub

// Result
Result_8:
proto 1 1
bytec_0 // ""
dup
frame_dig -1
extract 2 0
box_get
store 45
store 44
load 45
assert
load 44
frame_bury 1
bytec 6 // "yes_count"
app_global_get
bytec 5 // "No_count"
app_global_get
>
bnz Result_8_l4
bytec 6 // "yes_count"
app_global_get
bytec 5 // "No_count"
app_global_get
==
bnz Result_8_l3
pushbytes 0x4e6f2069732077696e6e65722020 // "No is winner  "
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
b Result_8_l5
Result_8_l3:
pushbytes 0x5469652020 // "Tie  "
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
b Result_8_l5
Result_8_l4:
pushbytes 0x5965732069732077696e6e65722020 // "Yes is winner  "
frame_bury 0
frame_dig 0
len
itob
extract 6 0
frame_dig 0
concat
frame_bury 0
Result_8_l5:
retsub

// read_proposal_store
readproposalstore_9:
proto 1 1
bytec_0 // ""
frame_dig -1
extract 2 0
box_get
store 47
store 46
load 47
assert
load 46
frame_bury 0
retsub

// read_asset_id
readassetid_10:
proto 1 1
bytec_0 // ""
bytec 4 // "$"
frame_dig -1
extract 2 0
concat
box_get
store 49
store 48
load 49
assert
load 48
frame_bury 0
retsub

// read_user_proposal_store
readuserproposalstore_11:
proto 2 1
bytec_0 // ""
dup
frame_dig -2
extract 2 0
box_get
store 51
store 50
load 51
assert
load 50
frame_bury 1
bytec_2 // "_"
frame_dig -1
extract 2 0
concat
box_get
store 53
store 52
load 53
assert
load 52
frame_bury 0
retsub

// read_user_asset_store
readuserassetstore_12:
proto 3 1
bytec_0 // ""
dupn 2
frame_dig -3
extract 2 0
box_get
store 55
store 54
load 55
assert
load 54
frame_bury 1
bytec_2 // "_"
frame_dig -2
extract 2 0
concat
box_get
store 57
store 56
load 57
assert
load 56
frame_bury 2
bytec_3 // "#"
frame_dig -1
extract 2 0
concat
box_get
store 59
store 58
load 59
assert
load 58
frame_bury 0
retsub

// read_user_response
readuserresponse_13:
proto 1 1
bytec_0 // ""
bytec 7 // "@"
frame_dig -1
extract 2 0
concat
box_get
store 61
store 60
load 61
assert
load 60
frame_bury 0
retsub

// Register_proposal_caster
Registerproposalcaster_14:
proto 0 0
bytec_0 // ""
dupn 2
intc_0 // 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
btoi
frame_bury 3
txna ApplicationArgs 4
frame_bury 4
txna ApplicationArgs 5
btoi
frame_bury 5
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
callsub Registerproposal_1
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// asset_register_caster
assetregistercaster_15:
proto 0 0
bytec_0 // ""
dupn 2
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
frame_dig 1
frame_dig 2
callsub assetregister_2
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// Registred_user_per_proposal_caster
Registreduserperproposalcaster_16:
proto 0 0
bytec_0 // ""
dupn 2
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
frame_dig 1
frame_dig 2
callsub Registreduserperproposal_3
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// Register_user_asset_caster
Registeruserassetcaster_17:
proto 0 0
bytec_0 // ""
dupn 3
intc_0 // 0
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
frame_bury 3
txna ApplicationArgs 4
btoi
frame_bury 4
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub Registeruserasset_4
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// update_proposal_caster
updateproposalcaster_18:
proto 0 0
bytec_0 // ""
dupn 2
intc_0 // 0
bytec_0 // ""
intc_0 // 0
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
btoi
frame_bury 3
txna ApplicationArgs 4
frame_bury 4
txna ApplicationArgs 5
btoi
frame_bury 5
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
callsub updateproposal_5
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// Update_Users_caster
UpdateUserscaster_19:
proto 0 0
bytec_0 // ""
dupn 3
intc_0 // 0
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
frame_bury 3
txna ApplicationArgs 4
btoi
frame_bury 4
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
callsub UpdateUsers_6
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// Voting_Record_caster
VotingRecordcaster_20:
proto 0 0
bytec_0 // ""
dupn 3
intc_0 // 0
dup
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
frame_bury 3
txna ApplicationArgs 4
btoi
frame_bury 4
txna ApplicationArgs 5
intc_0 // 0
pushint 8 // 8
*
getbit
frame_bury 5
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
callsub VotingRecord_7
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// Result_caster
Resultcaster_21:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub Result_8
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// read_proposal_store_caster
readproposalstorecaster_22:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub readproposalstore_9
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// read_asset_id_caster
readassetidcaster_23:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub readassetid_10
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// read_user_proposal_store_caster
readuserproposalstorecaster_24:
proto 0 0
bytec_0 // ""
dupn 2
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
frame_dig 1
frame_dig 2
callsub readuserproposalstore_11
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// read_user_asset_store_caster
readuserassetstorecaster_25:
proto 0 0
bytec_0 // ""
dupn 3
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
frame_bury 3
frame_dig 1
frame_dig 2
frame_dig 3
callsub readuserassetstore_12
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// read_user_response_caster
readuserresponsecaster_26:
proto 0 0
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub readuserresponse_13
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub